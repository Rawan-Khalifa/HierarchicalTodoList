{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { X, AlertCircle, ArrowRight } from \"lucide-react\";\nimport api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoveTaskModal = ({\n  isOpen,\n  onClose,\n  lists,\n  currentListId,\n  taskTitle,\n  task,\n  fetchTasks\n}) => {\n  _s();\n  const [selectedListId, setSelectedListId] = useState(\"\");\n  const [selectedParentId, setSelectedParentId] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [moveType, setMoveType] = useState(\"list\"); // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([]);\n  const [potentialParents, setPotentialParents] = useState([]);\n  const modalContentRef = useRef(null);\n  const requestInProgress = useRef(false);\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter(list => list.id !== currentListId);\n      setFilteredLists(filtered);\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\");\n      setSelectedParentId(\"\");\n      setMoveType(\"list\");\n      setPotentialParents([]);\n      setIsLoading(false);\n      setIsSubmitting(false);\n      requestInProgress.current = false;\n    }\n  }, [isOpen, lists, currentListId]);\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    // Prevent multiple simultaneous requests\n    if (requestInProgress.current) return;\n    requestInProgress.current = true;\n    setIsLoading(true);\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId;\n      const response = await api.get(`/api/todos/tasks/${listId}`);\n\n      // Helper function to get the depth of a task in the hierarchy\n      const getTaskDepth = (taskObj, allTasks, currentDepth = 0) => {\n        // Base case: if we're at the top level, return current depth\n        if (!taskObj.parent_id) return currentDepth;\n\n        // Find the parent task\n        const findParent = (tasks, parentId) => {\n          for (const t of tasks) {\n            if (t.id === parentId) return t;\n            if (t.subtasks && t.subtasks.length > 0) {\n              const found = findParent(t.subtasks, parentId);\n              if (found) return found;\n            }\n          }\n          return null;\n        };\n        const parent = findParent(allTasks, taskObj.parent_id);\n        if (!parent) return currentDepth; // Parent not found\n\n        // Recursively get depth of parent\n        return getTaskDepth(parent, allTasks, currentDepth + 1);\n      };\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter(t => {\n          if (t.id === taskId) return false;\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId);\n          }\n          return true;\n        });\n      };\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id);\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach(t => {\n          // Check if adding this task as a parent would exceed max depth\n          const maxDepth = 2; // 0-based, so this is 3 levels\n          const currentTaskDepth = getTaskDepth(task, response.data);\n\n          // Only add as potential parent if it wouldn't exceed max depth\n          if (depth + currentTaskDepth <= maxDepth) {\n            result.push({\n              id: t.id,\n              title: t.title,\n              depth\n            });\n          }\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result);\n          }\n        });\n        return result;\n      };\n      const flatTasks = flattenTasks(filteredTasks);\n      setPotentialParents(flatTasks);\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error);\n      toast.error(\"Failed to load tasks. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      requestInProgress.current = false;\n    }\n  }, [selectedListId, currentListId, task]);\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen && !isSubmitting) {\n      fetchPotentialParents();\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents, isSubmitting]);\n  if (!isOpen) return null;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (moveType === \"list\" && !selectedListId) return;\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return;\n    if (isSubmitting || isLoading) return;\n    setIsSubmitting(true);\n    try {\n      if (moveType === \"list\") {\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null // Make it a top-level task\n        });\n        const targetList = filteredLists.find(l => l.id === selectedListId);\n        toast.success(`Task moved to \"${(targetList === null || targetList === void 0 ? void 0 : targetList.title) || \"another list\"}\"`);\n      } else {\n        var _filteredLists$find, _lists$find, _potentialParents$fin;\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId;\n\n        // If \"root\" is selected, send null as parent_id to make it a top-level task\n        // Otherwise, send the selected parent ID\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId;\n        const targetListName = selectedListId ? (_filteredLists$find = filteredLists.find(l => l.id === selectedListId)) === null || _filteredLists$find === void 0 ? void 0 : _filteredLists$find.title : (_lists$find = lists.find(l => l.id === currentListId)) === null || _lists$find === void 0 ? void 0 : _lists$find.title;\n        const parentName = selectedParentId === \"root\" ? \"top level\" : (_potentialParents$fin = potentialParents.find(p => p.id === selectedParentId)) === null || _potentialParents$fin === void 0 ? void 0 : _potentialParents$fin.title;\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId\n        });\n        toast.success(`Task moved to ${parentName ? `\"${parentName}\"` : \"top level\"} in ${targetListName}`);\n      }\n\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks();\n        onClose();\n      }, 300);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Failed to move task:\", error);\n      toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Failed to move task. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal move-task-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Move Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          \"aria-label\": \"Close\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          ref: modalContentRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-info\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Moving task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: taskTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Move Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"radio-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"moveType\",\n                  value: \"list\",\n                  checked: moveType === \"list\",\n                  onChange: () => setMoveType(\"list\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 19\n                }, this), \"Move to another list\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"radio-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"moveType\",\n                  value: \"parent\",\n                  checked: moveType === \"parent\",\n                  onChange: () => setMoveType(\"parent\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), \"Move under another task\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this), moveType === \"list\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"listSelect\",\n              children: [\"Select List \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"required\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 31\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), filteredLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-error\",\n              children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"No other lists available. Create a new list first.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"listSelect\",\n              value: selectedListId,\n              onChange: e => setSelectedListId(e.target.value),\n              className: \"select-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a list\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: list.id,\n                children: list.title\n              }, list.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), moveType === \"parent\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"listSelectForParent\",\n                children: \"Select List (Optional)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"listSelectForParent\",\n                value: selectedListId,\n                onChange: e => setSelectedListId(e.target.value),\n                className: \"select-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Current List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: list.id,\n                  children: list.title\n                }, list.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parentSelect\",\n                children: [\"Select Parent Task \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"required\",\n                  children: \"*\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 40\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-spinner-container\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this) : potentialParents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"no-options-message\",\n                  children: \"No available parent tasks. Moving to top level.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"parentSelect\",\n                  value: \"root\",\n                  onChange: e => setSelectedParentId(e.target.value),\n                  className: \"select-input\",\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"root\",\n                    children: \"Move to top level\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"parentSelect\",\n                value: selectedParentId,\n                onChange: e => setSelectedParentId(e.target.value),\n                className: \"select-input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Select a parent task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"root\",\n                  children: \"Move to top level\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), potentialParents.map(parent => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: parent.id,\n                  children: [Array(parent.depth + 1).join(\"— \"), \" \", parent.title]\n                }, parent.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 25\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button secondary\",\n            onClick: onClose,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button primary\",\n            disabled: isSubmitting || isLoading || moveType === \"list\" && !selectedListId || moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\",\n            children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), \"Moving...\"]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Move Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ArrowRight, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveTaskModal, \"uVx0kNDeGTvQ4709zqARldDt2X8=\");\n_c = MoveTaskModal;\nexport default MoveTaskModal;\nvar _c;\n$RefreshReg$(_c, \"MoveTaskModal\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useRef","useCallback","X","AlertCircle","ArrowRight","api","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MoveTaskModal","isOpen","onClose","lists","currentListId","taskTitle","task","fetchTasks","selectedListId","setSelectedListId","selectedParentId","setSelectedParentId","isSubmitting","setIsSubmitting","isLoading","setIsLoading","moveType","setMoveType","filteredLists","setFilteredLists","potentialParents","setPotentialParents","modalContentRef","requestInProgress","filtered","filter","list","id","current","fetchPotentialParents","listId","response","get","getTaskDepth","taskObj","allTasks","currentDepth","parent_id","findParent","tasks","parentId","t","subtasks","length","found","parent","filterTaskAndDescendants","taskId","filteredTasks","data","flattenTasks","depth","result","forEach","maxDepth","currentTaskDepth","push","title","flatTasks","error","console","handleSubmit","e","preventDefault","patch","list_id","targetList","find","l","success","_filteredLists$find","_lists$find","_potentialParents$fin","targetListId","targetListName","parentName","p","setTimeout","_error$response","_error$response$data","className","children","fileName","lineNumber","columnNumber","onClick","size","onSubmit","ref","type","name","value","checked","onChange","htmlFor","target","map","Array","join","disabled","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useRef, useCallback } from \"react\"\nimport { X, AlertCircle, ArrowRight } from \"lucide-react\"\nimport api from \"../services/api\"\nimport { toast } from \"react-toastify\"\nimport \"./Modal.css\"\n\nconst MoveTaskModal = ({ isOpen, onClose, lists, currentListId, taskTitle, task, fetchTasks }) => {\n  const [selectedListId, setSelectedListId] = useState(\"\")\n  const [selectedParentId, setSelectedParentId] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [moveType, setMoveType] = useState(\"list\") // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([])\n  const [potentialParents, setPotentialParents] = useState([])\n  const modalContentRef = useRef(null)\n  const requestInProgress = useRef(false)\n\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter((list) => list.id !== currentListId)\n      setFilteredLists(filtered)\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\")\n      setSelectedParentId(\"\")\n      setMoveType(\"list\")\n      setPotentialParents([])\n      setIsLoading(false)\n      setIsSubmitting(false)\n      requestInProgress.current = false\n    }\n  }, [isOpen, lists, currentListId])\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    // Prevent multiple simultaneous requests\n    if (requestInProgress.current) return\n\n    requestInProgress.current = true\n    setIsLoading(true)\n\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId\n      const response = await api.get(`/api/todos/tasks/${listId}`)\n\n      // Helper function to get the depth of a task in the hierarchy\n      const getTaskDepth = (taskObj, allTasks, currentDepth = 0) => {\n        // Base case: if we're at the top level, return current depth\n        if (!taskObj.parent_id) return currentDepth\n\n        // Find the parent task\n        const findParent = (tasks, parentId) => {\n          for (const t of tasks) {\n            if (t.id === parentId) return t\n            if (t.subtasks && t.subtasks.length > 0) {\n              const found = findParent(t.subtasks, parentId)\n              if (found) return found\n            }\n          }\n          return null\n        }\n\n        const parent = findParent(allTasks, taskObj.parent_id)\n        if (!parent) return currentDepth // Parent not found\n\n        // Recursively get depth of parent\n        return getTaskDepth(parent, allTasks, currentDepth + 1)\n      }\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter((t) => {\n          if (t.id === taskId) return false\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId)\n          }\n\n          return true\n        })\n      }\n\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id)\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach((t) => {\n          // Check if adding this task as a parent would exceed max depth\n          const maxDepth = 2 // 0-based, so this is 3 levels\n          const currentTaskDepth = getTaskDepth(task, response.data)\n\n          // Only add as potential parent if it wouldn't exceed max depth\n          if (depth + currentTaskDepth <= maxDepth) {\n            result.push({\n              id: t.id,\n              title: t.title,\n              depth,\n            })\n          }\n\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result)\n          }\n        })\n        return result\n      }\n\n      const flatTasks = flattenTasks(filteredTasks)\n      setPotentialParents(flatTasks)\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error)\n      toast.error(\"Failed to load tasks. Please try again.\")\n    } finally {\n      setIsLoading(false)\n      requestInProgress.current = false\n    }\n  }, [selectedListId, currentListId, task])\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen && !isSubmitting) {\n      fetchPotentialParents()\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents, isSubmitting])\n\n  if (!isOpen) return null\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (moveType === \"list\" && !selectedListId) return\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return\n    if (isSubmitting || isLoading) return\n\n    setIsSubmitting(true)\n    try {\n      if (moveType === \"list\") {\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null, // Make it a top-level task\n        })\n\n        const targetList = filteredLists.find((l) => l.id === selectedListId)\n        toast.success(`Task moved to \"${targetList?.title || \"another list\"}\"`)\n      } else {\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId\n\n        // If \"root\" is selected, send null as parent_id to make it a top-level task\n        // Otherwise, send the selected parent ID\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId\n\n        const targetListName = selectedListId\n          ? filteredLists.find((l) => l.id === selectedListId)?.title\n          : lists.find((l) => l.id === currentListId)?.title\n\n        const parentName =\n          selectedParentId === \"root\" ? \"top level\" : potentialParents.find((p) => p.id === selectedParentId)?.title\n\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId,\n        })\n\n        toast.success(`Task moved to ${parentName ? `\"${parentName}\"` : \"top level\"} in ${targetListName}`)\n      }\n\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks()\n        onClose()\n      }, 300)\n    } catch (error) {\n      console.error(\"Failed to move task:\", error)\n      toast.error(error.response?.data?.error || \"Failed to move task. Please try again.\")\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal move-task-modal\">\n        <div className=\"modal-header\">\n          <h2>Move Task</h2>\n          <button onClick={onClose} className=\"close-button\" aria-label=\"Close\">\n            <X size={20} />\n          </button>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\" ref={modalContentRef}>\n            <div className=\"task-info\">\n              <p>\n                Moving task: <strong>{taskTitle}</strong>\n              </p>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Move Type</label>\n              <div className=\"radio-group\">\n                <label className=\"radio-label\">\n                  <input\n                    type=\"radio\"\n                    name=\"moveType\"\n                    value=\"list\"\n                    checked={moveType === \"list\"}\n                    onChange={() => setMoveType(\"list\")}\n                  />\n                  Move to another list\n                </label>\n                <label className=\"radio-label\">\n                  <input\n                    type=\"radio\"\n                    name=\"moveType\"\n                    value=\"parent\"\n                    checked={moveType === \"parent\"}\n                    onChange={() => setMoveType(\"parent\")}\n                  />\n                  Move under another task\n                </label>\n              </div>\n            </div>\n\n            {moveType === \"list\" && (\n              <div className=\"form-group\">\n                <label htmlFor=\"listSelect\">\n                  Select List <span className=\"required\">*</span>\n                </label>\n                {filteredLists.length === 0 ? (\n                  <div className=\"modal-error\">\n                    <AlertCircle size={16} />\n                    <span>No other lists available. Create a new list first.</span>\n                  </div>\n                ) : (\n                  <select\n                    id=\"listSelect\"\n                    value={selectedListId}\n                    onChange={(e) => setSelectedListId(e.target.value)}\n                    className=\"select-input\"\n                  >\n                    <option value=\"\">Select a list</option>\n                    {filteredLists.map((list) => (\n                      <option key={list.id} value={list.id}>\n                        {list.title}\n                      </option>\n                    ))}\n                  </select>\n                )}\n              </div>\n            )}\n\n            {moveType === \"parent\" && (\n              <>\n                <div className=\"form-group\">\n                  <label htmlFor=\"listSelectForParent\">Select List (Optional)</label>\n                  <select\n                    id=\"listSelectForParent\"\n                    value={selectedListId}\n                    onChange={(e) => setSelectedListId(e.target.value)}\n                    className=\"select-input\"\n                  >\n                    <option value=\"\">Current List</option>\n                    {filteredLists.map((list) => (\n                      <option key={list.id} value={list.id}>\n                        {list.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"parentSelect\">\n                    Select Parent Task <span className=\"required\">*</span>\n                  </label>\n                  {isLoading ? (\n                    <div className=\"loading-spinner-container\">\n                      <div className=\"loading-spinner\"></div>\n                    </div>\n                  ) : potentialParents.length === 0 ? (\n                    <div className=\"form-group\">\n                      <div className=\"no-options-message\">No available parent tasks. Moving to top level.</div>\n                      <select\n                        id=\"parentSelect\"\n                        value=\"root\"\n                        onChange={(e) => setSelectedParentId(e.target.value)}\n                        className=\"select-input\"\n                      >\n                        <option value=\"root\">Move to top level</option>\n                      </select>\n                    </div>\n                  ) : (\n                    <select\n                      id=\"parentSelect\"\n                      value={selectedParentId}\n                      onChange={(e) => setSelectedParentId(e.target.value)}\n                      className=\"select-input\"\n                    >\n                      <option value=\"\">Select a parent task</option>\n                      <option value=\"root\">Move to top level</option>\n                      {potentialParents.map((parent) => (\n                        <option key={parent.id} value={parent.id}>\n                          {Array(parent.depth + 1).join(\"— \")} {parent.title}\n                        </option>\n                      ))}\n                    </select>\n                  )}\n                </div>\n              </>\n            )}\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"button secondary\" onClick={onClose} disabled={isSubmitting}>\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              className=\"button primary\"\n              disabled={\n                isSubmitting ||\n                isLoading ||\n                (moveType === \"list\" && !selectedListId) ||\n                (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\")\n              }\n            >\n              {isSubmitting ? (\n                <>\n                  <div className=\"button-spinner\"></div>\n                  Moving...\n                </>\n              ) : (\n                <>\n                  <span>Move Task</span>\n                  <ArrowRight size={16} />\n                </>\n              )}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default MoveTaskModal\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}