{"ast":null,"code":"import axios from \"axios\";\n\n// Ensure axios always sends cookies with requests\naxios.defaults.withCredentials = true;\n\n// Use .env or default localhost\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Set up an interceptor to handle 401 responses\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Automatically redirect to login page\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Create axios instance with base URL and credentials\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true\n});\n\n// Authentication\nexport const registerUser = async (username, password) => {\n  const response = await api.post(\"/auth/register\", {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const loginUser = async (username, password) => {\n  const response = await api.post(\"/auth/login\", {\n    username,\n    password\n  });\n  // Store user info in localStorage to match your existing authentication check\n  localStorage.setItem(\"user\", JSON.stringify({\n    username\n  }));\n  localStorage.setItem(\"token\", response.data.token);\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n  return response.data;\n};\nexport const logoutUser = async () => {\n  const response = await api.post(\"/auth/logout\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"token\");\n  delete api.defaults.headers.common[\"Authorization\"];\n  return response.data;\n};\n\n// Todo Lists - renamed to match your existing component\nexport const getTodoLists = async () => {\n  const response = await api.get(\"/todos/lists\");\n  return response.data;\n};\nexport const createList = async title => {\n  const response = await api.post(\"/todos/list\", {\n    title\n  });\n  return response.data;\n};\n\n// Tasks\nexport const getTasks = async listId => {\n  const response = await api.get(`/todos/tasks/${listId}`);\n  return response.data;\n};\nexport const createTask = async task => {\n  const response = await api.post(\"/todos/task\", task);\n  return response.data;\n};\nexport const updateTaskStatus = async (taskId, status) => {\n  const response = await api.patch(`/todos/task/${taskId}/status`, {\n    status\n  });\n  return response.data;\n};\n\n// Set token on app initialization\nconst token = localStorage.getItem(\"token\");\nif (token) {\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n}\nexport default api;","map":{"version":3,"names":["axios","defaults","withCredentials","API_URL","process","env","REACT_APP_API_URL","interceptors","response","use","error","status","window","location","href","Promise","reject","api","create","baseURL","registerUser","username","password","post","data","loginUser","localStorage","setItem","JSON","stringify","token","headers","common","logoutUser","removeItem","getTodoLists","get","createList","title","getTasks","listId","createTask","task","updateTaskStatus","taskId","patch","getItem"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\n// Ensure axios always sends cookies with requests\naxios.defaults.withCredentials = true;\n\n// Use .env or default localhost\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n// Set up an interceptor to handle 401 responses\naxios.interceptors.response.use(\n    response => response,\n    error => {\n      if (error.response && error.response.status === 401) {\n        // Automatically redirect to login page\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    }\n  );\n\n// Create axios instance with base URL and credentials\nconst api = axios.create({\n  baseURL: API_URL,\n  withCredentials: true,\n})\n\n// Authentication\nexport const registerUser = async (username, password) => {\n  const response = await api.post(\"/auth/register\", { username, password })\n  return response.data\n}\n\nexport const loginUser = async (username, password) => {\n  const response = await api.post(\"/auth/login\", { username, password })\n  // Store user info in localStorage to match your existing authentication check\n  localStorage.setItem(\"user\", JSON.stringify({ username }))\n  localStorage.setItem(\"token\", response.data.token)\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`\n  return response.data\n}\n\nexport const logoutUser = async () => {\n  const response = await api.post(\"/auth/logout\")\n  localStorage.removeItem(\"user\")\n  localStorage.removeItem(\"token\")\n  delete api.defaults.headers.common[\"Authorization\"]\n  return response.data\n}\n\n// Todo Lists - renamed to match your existing component\nexport const getTodoLists = async () => {\n  const response = await api.get(\"/todos/lists\")\n  return response.data\n}\n\nexport const createList = async (title) => {\n  const response = await api.post(\"/todos/list\", { title })\n  return response.data\n}\n\n// Tasks\nexport const getTasks = async (listId) => {\n  const response = await api.get(`/todos/tasks/${listId}`)\n  return response.data\n}\n\nexport const createTask = async (task) => {\n  const response = await api.post(\"/todos/task\", task)\n  return response.data\n}\n\nexport const updateTaskStatus = async (taskId, status) => {\n  const response = await api.patch(`/todos/task/${taskId}/status`, { status })\n  return response.data\n}\n\n// Set token on app initialization\nconst token = localStorage.getItem(\"token\")\nif (token) {\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n}\n\nexport default api;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}