{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/TaskItem.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ChevronDown, ChevronRight, Plus, Check, MoreVertical, Trash, MoveVertical } from \"lucide-react\";\nimport api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport MoveTaskModal from \"./MoveTaskModal\";\nimport \"./TaskItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  onStatusChange,\n  onCreateSubtask,\n  depth,\n  fetchTasks,\n  lists\n}) => {\n  _s();\n  const [expanded, setExpanded] = useState(true);\n  const [showMenu, setShowMenu] = useState(false);\n  const [isMoveModalOpen, setIsMoveModalOpen] = useState(false);\n  const [allSubtasksCompleted, setAllSubtasksCompleted] = useState(false);\n  const [isUpdating, setIsUpdating] = useState(false);\n  const menuRef = useRef(null);\n  const updateInProgress = useRef(false);\n  const maxDepth = 2; // 0-based index, so this is 3 levels\n  const canHaveChildren = depth < maxDepth;\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n    if (showMenu) {\n      document.addEventListener(\"mousedown\", handleClickOutside);\n    }\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [showMenu]);\n\n  // The handleStatusChange function needs to be memoized with useCallback to avoid infinite loops\n  const handleStatusChange = useCallback(async (isAutoComplete = false) => {\n    // Prevent multiple simultaneous requests\n    if (updateInProgress.current) return;\n    updateInProgress.current = true;\n    setIsUpdating(true);\n    try {\n      // If trying to mark as incomplete but has completed subtasks, show error\n      if (task.status === \"Done\" && allSubtasksCompleted && !isAutoComplete) {\n        toast.error(\"Cannot mark task as incomplete while it has completed subtasks\", {\n          autoClose: 5000\n        });\n        return;\n      }\n\n      // If trying to mark as complete but has incomplete subtasks, show error\n      if (task.status !== \"Done\" && task.subtasks && task.subtasks.length > 0 && !allSubtasksCompleted && !isAutoComplete) {\n        toast.error(\"Cannot mark task as complete until all subtasks are completed\", {\n          autoClose: 5000\n        });\n        return;\n      }\n      const newStatus = task.status === \"Done\" ? \"Todo\" : \"Done\";\n      await api.patch(`/api/todos/task/${task.id}/status`, {\n        status: newStatus\n      });\n      if (!isAutoComplete) {\n        toast.success(`Task marked as ${newStatus}`);\n      }\n      onStatusChange(task.id, newStatus);\n\n      // If marking as complete and this is a subtask, check if all siblings are complete\n      if (newStatus === \"Done\" && depth > 0) {\n        // Wait a moment before fetching to ensure the server has processed the change\n        setTimeout(() => {\n          fetchTasks();\n        }, 300);\n      }\n    } catch (error) {\n      toast.error(\"Failed to update task status\", {\n        autoClose: 5000\n      });\n    } finally {\n      setIsUpdating(false);\n      updateInProgress.current = false;\n    }\n  }, [task.status, task.id, task.subtasks, allSubtasksCompleted, depth, onStatusChange, fetchTasks]);\n\n  // Check if all subtasks are completed\n  useEffect(() => {\n    if (task.subtasks && task.subtasks.length > 0) {\n      const allCompleted = task.subtasks.every(subtask => subtask.status === \"Done\");\n      setAllSubtasksCompleted(allCompleted);\n\n      // If all subtasks are completed and the task is not completed, mark it as completed\n      if (allCompleted && task.status !== \"Done\" && !updateInProgress.current) {\n        handleStatusChange(true);\n      }\n    }\n  }, [task.subtasks, task.status, handleStatusChange]);\n  const handleToggleExpand = () => {\n    setExpanded(!expanded);\n  };\n  const handleDeleteTask = async () => {\n    if (updateInProgress.current) return;\n    updateInProgress.current = true;\n    setIsUpdating(true);\n    try {\n      await api.delete(`/api/todos/task/${task.id}`);\n      toast.success(\"Task deleted successfully\");\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks();\n      }, 300);\n    } catch (error) {\n      toast.error(\"Failed to delete task\", {\n        autoClose: 5000\n      });\n    } finally {\n      setIsUpdating(false);\n      updateInProgress.current = false;\n    }\n  };\n  const getStatusClass = status => {\n    switch (status) {\n      case \"Done\":\n        return \"status-done\";\n      case \"In Progress\":\n        return \"status-progress\";\n      default:\n        return \"status-todo\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.status === \"Done\" ? \"completed\" : \"\"}`,\n    style: {\n      marginLeft: `${depth * 20}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-expand\",\n        children: task.subtasks && task.subtasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleToggleExpand,\n          className: \"expand-button\",\n          children: expanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expand-placeholder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-main\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-checkbox-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStatusChange(),\n              className: `task-checkbox ${task.status === \"Done\" ? \"checked\" : \"\"} ${isUpdating ? \"updating\" : \"\"}`,\n              \"aria-label\": task.status === \"Done\" ? \"Mark as incomplete\" : \"Mark as complete\",\n              disabled: isUpdating,\n              children: [task.status === \"Done\" && /*#__PURE__*/_jsxDEV(Check, {\n                size: 14,\n                className: \"check-icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 44\n              }, this), isUpdating && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"checkbox-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: `task-title ${task.status === \"Done\" ? \"completed\" : \"\"}`,\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this), task.description && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"task-description\",\n                children: task.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-meta\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `task-status ${getStatusClass(task.status)}`,\n                  children: task.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-actions\",\n            ref: menuRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowMenu(!showMenu),\n                className: \"dropdown-button\",\n                \"aria-label\": \"Task options\",\n                disabled: isUpdating,\n                children: /*#__PURE__*/_jsxDEV(MoreVertical, {\n                  size: 18\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"dropdown-menu\",\n                children: [canHaveChildren && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setShowMenu(false);\n                    onCreateSubtask(task);\n                  },\n                  className: \"dropdown-item\",\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(Plus, {\n                    size: 16,\n                    className: \"dropdown-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 25\n                  }, this), \"Add Subtask\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setShowMenu(false);\n                    setIsMoveModalOpen(true);\n                  },\n                  className: \"dropdown-item\",\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(MoveVertical, {\n                    size: 16,\n                    className: \"dropdown-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this), \"Move Task\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => {\n                    setShowMenu(false);\n                    handleDeleteTask();\n                  },\n                  className: \"dropdown-item delete\",\n                  disabled: isUpdating,\n                  children: [/*#__PURE__*/_jsxDEV(Trash, {\n                    size: 16,\n                    className: \"dropdown-icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this), \"Delete\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), expanded && task.subtasks && task.subtasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtasks\",\n      children: task.subtasks.map(subtask => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: subtask,\n        onStatusChange: onStatusChange,\n        onCreateSubtask: onCreateSubtask,\n        depth: depth + 1,\n        fetchTasks: fetchTasks,\n        lists: lists\n      }, subtask.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this), isMoveModalOpen && /*#__PURE__*/_jsxDEV(MoveTaskModal, {\n      isOpen: isMoveModalOpen,\n      onClose: () => setIsMoveModalOpen(false),\n      lists: lists,\n      currentListId: task.list_id,\n      taskTitle: task.title,\n      task: task,\n      fetchTasks: fetchTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"XpZ3NLYc+ylANgKrZ1SVKV28CdU=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","useRef","ChevronDown","ChevronRight","Plus","Check","MoreVertical","Trash","MoveVertical","api","toast","MoveTaskModal","jsxDEV","_jsxDEV","TaskItem","task","onStatusChange","onCreateSubtask","depth","fetchTasks","lists","expanded","setExpanded","showMenu","setShowMenu","isMoveModalOpen","setIsMoveModalOpen","allSubtasksCompleted","setAllSubtasksCompleted","isUpdating","setIsUpdating","menuRef","updateInProgress","maxDepth","canHaveChildren","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleStatusChange","isAutoComplete","status","error","autoClose","subtasks","length","newStatus","patch","id","success","setTimeout","allCompleted","every","subtask","handleToggleExpand","handleDeleteTask","delete","getStatusClass","className","style","marginLeft","children","onClick","size","fileName","lineNumber","columnNumber","disabled","title","description","ref","map","isOpen","onClose","currentListId","list_id","taskTitle","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/TaskItem.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback, useRef } from \"react\"\nimport { ChevronDown, ChevronRight, Plus, Check, MoreVertical, Trash, MoveVertical } from \"lucide-react\"\nimport api from \"../services/api\"\nimport { toast } from \"react-toastify\"\nimport MoveTaskModal from \"./MoveTaskModal\"\nimport \"./TaskItem.css\"\n\nconst TaskItem = ({ task, onStatusChange, onCreateSubtask, depth, fetchTasks, lists }) => {\n  const [expanded, setExpanded] = useState(true)\n  const [showMenu, setShowMenu] = useState(false)\n  const [isMoveModalOpen, setIsMoveModalOpen] = useState(false)\n  const [allSubtasksCompleted, setAllSubtasksCompleted] = useState(false)\n  const [isUpdating, setIsUpdating] = useState(false)\n  const menuRef = useRef(null)\n  const updateInProgress = useRef(false)\n\n  const maxDepth = 2 // 0-based index, so this is 3 levels\n  const canHaveChildren = depth < maxDepth\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\n        setShowMenu(false)\n      }\n    }\n\n    if (showMenu) {\n      document.addEventListener(\"mousedown\", handleClickOutside)\n    }\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside)\n    }\n  }, [showMenu])\n\n  // The handleStatusChange function needs to be memoized with useCallback to avoid infinite loops\n  const handleStatusChange = useCallback(\n    async (isAutoComplete = false) => {\n      // Prevent multiple simultaneous requests\n      if (updateInProgress.current) return\n      updateInProgress.current = true\n      setIsUpdating(true)\n\n      try {\n        // If trying to mark as incomplete but has completed subtasks, show error\n        if (task.status === \"Done\" && allSubtasksCompleted && !isAutoComplete) {\n          toast.error(\"Cannot mark task as incomplete while it has completed subtasks\", { autoClose: 5000 })\n          return\n        }\n\n        // If trying to mark as complete but has incomplete subtasks, show error\n        if (\n          task.status !== \"Done\" &&\n          task.subtasks &&\n          task.subtasks.length > 0 &&\n          !allSubtasksCompleted &&\n          !isAutoComplete\n        ) {\n          toast.error(\"Cannot mark task as complete until all subtasks are completed\", { autoClose: 5000 })\n          return\n        }\n\n        const newStatus = task.status === \"Done\" ? \"Todo\" : \"Done\"\n        await api.patch(`/api/todos/task/${task.id}/status`, { status: newStatus })\n\n        if (!isAutoComplete) {\n          toast.success(`Task marked as ${newStatus}`)\n        }\n\n        onStatusChange(task.id, newStatus)\n\n        // If marking as complete and this is a subtask, check if all siblings are complete\n        if (newStatus === \"Done\" && depth > 0) {\n          // Wait a moment before fetching to ensure the server has processed the change\n          setTimeout(() => {\n            fetchTasks()\n          }, 300)\n        }\n      } catch (error) {\n        toast.error(\"Failed to update task status\", { autoClose: 5000 })\n      } finally {\n        setIsUpdating(false)\n        updateInProgress.current = false\n      }\n    },\n    [task.status, task.id, task.subtasks, allSubtasksCompleted, depth, onStatusChange, fetchTasks],\n  )\n\n  // Check if all subtasks are completed\n  useEffect(() => {\n    if (task.subtasks && task.subtasks.length > 0) {\n      const allCompleted = task.subtasks.every((subtask) => subtask.status === \"Done\")\n      setAllSubtasksCompleted(allCompleted)\n\n      // If all subtasks are completed and the task is not completed, mark it as completed\n      if (allCompleted && task.status !== \"Done\" && !updateInProgress.current) {\n        handleStatusChange(true)\n      }\n    }\n  }, [task.subtasks, task.status, handleStatusChange])\n\n  const handleToggleExpand = () => {\n    setExpanded(!expanded)\n  }\n\n  const handleDeleteTask = async () => {\n    if (updateInProgress.current) return\n    updateInProgress.current = true\n    setIsUpdating(true)\n\n    try {\n      await api.delete(`/api/todos/task/${task.id}`)\n      toast.success(\"Task deleted successfully\")\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks()\n      }, 300)\n    } catch (error) {\n      toast.error(\"Failed to delete task\", { autoClose: 5000 })\n    } finally {\n      setIsUpdating(false)\n      updateInProgress.current = false\n    }\n  }\n\n  const getStatusClass = (status) => {\n    switch (status) {\n      case \"Done\":\n        return \"status-done\"\n      case \"In Progress\":\n        return \"status-progress\"\n      default:\n        return \"status-todo\"\n    }\n  }\n\n  return (\n    <div className={`task-item ${task.status === \"Done\" ? \"completed\" : \"\"}`} style={{ marginLeft: `${depth * 20}px` }}>\n      <div className=\"task-header\">\n        <div className=\"task-expand\">\n          {task.subtasks && task.subtasks.length > 0 ? (\n            <button onClick={handleToggleExpand} className=\"expand-button\">\n              {expanded ? <ChevronDown size={18} /> : <ChevronRight size={18} />}\n            </button>\n          ) : (\n            <div className=\"expand-placeholder\"></div>\n          )}\n        </div>\n\n        <div className=\"task-content\">\n          <div className=\"task-main\">\n            <div className=\"task-checkbox-container\">\n              <button\n                onClick={() => handleStatusChange()}\n                className={`task-checkbox ${task.status === \"Done\" ? \"checked\" : \"\"} ${isUpdating ? \"updating\" : \"\"}`}\n                aria-label={task.status === \"Done\" ? \"Mark as incomplete\" : \"Mark as complete\"}\n                disabled={isUpdating}\n              >\n                {task.status === \"Done\" && <Check size={14} className=\"check-icon\" />}\n                {isUpdating && <div className=\"checkbox-spinner\"></div>}\n              </button>\n\n              <div className=\"task-details\">\n                <h3 className={`task-title ${task.status === \"Done\" ? \"completed\" : \"\"}`}>{task.title}</h3>\n                {task.description && <p className=\"task-description\">{task.description}</p>}\n                <div className=\"task-meta\">\n                  <span className={`task-status ${getStatusClass(task.status)}`}>{task.status}</span>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"task-actions\" ref={menuRef}>\n              <div className=\"dropdown\">\n                <button\n                  onClick={() => setShowMenu(!showMenu)}\n                  className=\"dropdown-button\"\n                  aria-label=\"Task options\"\n                  disabled={isUpdating}\n                >\n                  <MoreVertical size={18} />\n                </button>\n\n                {showMenu && (\n                  <div className=\"dropdown-menu\">\n                    {canHaveChildren && (\n                      <button\n                        onClick={() => {\n                          setShowMenu(false)\n                          onCreateSubtask(task)\n                        }}\n                        className=\"dropdown-item\"\n                        disabled={isUpdating}\n                      >\n                        <Plus size={16} className=\"dropdown-icon\" />\n                        Add Subtask\n                      </button>\n                    )}\n\n                    {/* Show move option for all tasks */}\n                    <button\n                      onClick={() => {\n                        setShowMenu(false)\n                        setIsMoveModalOpen(true)\n                      }}\n                      className=\"dropdown-item\"\n                      disabled={isUpdating}\n                    >\n                      <MoveVertical size={16} className=\"dropdown-icon\" />\n                      Move Task\n                    </button>\n\n                    <button\n                      onClick={() => {\n                        setShowMenu(false)\n                        handleDeleteTask()\n                      }}\n                      className=\"dropdown-item delete\"\n                      disabled={isUpdating}\n                    >\n                      <Trash size={16} className=\"dropdown-icon\" />\n                      Delete\n                    </button>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {expanded && task.subtasks && task.subtasks.length > 0 && (\n        <div className=\"subtasks\">\n          {task.subtasks.map((subtask) => (\n            <TaskItem\n              key={subtask.id}\n              task={subtask}\n              onStatusChange={onStatusChange}\n              onCreateSubtask={onCreateSubtask}\n              depth={depth + 1}\n              fetchTasks={fetchTasks}\n              lists={lists}\n            />\n          ))}\n        </div>\n      )}\n\n      {isMoveModalOpen && (\n        <MoveTaskModal\n          isOpen={isMoveModalOpen}\n          onClose={() => setIsMoveModalOpen(false)}\n          lists={lists}\n          currentListId={task.list_id}\n          taskTitle={task.title}\n          task={task}\n          fetchTasks={fetchTasks}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default TaskItem;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}