{"ast":null,"code":"var _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getTodoLists, createTodoList } from '../services/api'; // <-- Make sure to import here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const [title, setTitle] = useState('');\n  const userId = localStorage.getItem('userId'); // From login\n\n  const fetchLists = async () => {\n    try {\n      if (userId) {\n        const data = await getTodoLists(userId);\n        setLists(data);\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n    }\n  };\n  useEffect(() => {\n    fetchLists();\n  }, [userId]);\n  const handleCreateList = async () => {\n    try {\n      await createTodoList(title, userId);\n      setTitle('');\n      fetchLists();\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    try {\n      await updateTaskStatus(taskId, newStatus);\n      fetchTasks(); // Refresh tasks after status update\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"New List Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateList,\n        children: \"Create List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), lists.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n        listId: list.id,\n        onUpdateTaskStatus: handleUpdateTaskStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, list.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ApYHBrsdOPiPpi5IuOP79vipOxk=\");\n_c = Dashboard;\nconst TaskList = ({\n  listId,\n  onUpdateTaskStatus\n}) => {\n  _s2();\n  const [tasks, setTasks] = useState([]);\n  const fetchTasks = async () => {\n    try {\n      const taskData = await getTasksForList(listId);\n      setTasks(taskData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, [listId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onUpdateTaskStatus(task.id, 'In Progress'),\n        children: \"Move to In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onUpdateTaskStatus(task.id, 'Done'),\n        children: \"Move to Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c2 = TaskList;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"Dashboard\");\n$RefreshReg$(_c2, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","getTodoLists","createTodoList","jsxDEV","_jsxDEV","Dashboard","_s","lists","setLists","title","setTitle","userId","localStorage","getItem","fetchLists","data","error","console","handleCreateList","handleUpdateTaskStatus","taskId","newStatus","updateTaskStatus","fetchTasks","style","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","list","TaskList","listId","id","onUpdateTaskStatus","_c","_s2","tasks","setTasks","taskData","getTasksForList","task","description","_c2","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTodoLists, createTodoList } from '../services/api'; // <-- Make sure to import here\n\n\nconst Dashboard = () => {\n  const [lists, setLists] = useState([]);\n  const [title, setTitle] = useState('');\n  const userId = localStorage.getItem('userId'); // From login\n\n  const fetchLists = async () => {\n    try {\n      if (userId) {\n        const data = await getTodoLists(userId);\n        setLists(data);\n      }\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchLists();\n  }, [userId]);\n\n  const handleCreateList = async () => {\n    try {\n      await createTodoList(title, userId);\n      setTitle('');\n      fetchLists();\n    } catch (error) {\n      console.error('Error creating list:', error);\n    }\n  };\n\n  const handleUpdateTaskStatus = async (taskId, newStatus) => {\n    try {\n      await updateTaskStatus(taskId, newStatus);\n      fetchTasks(); // Refresh tasks after status update\n    } catch (error) {\n      console.error('Error updating task status:', error);\n    }\n  };\n\n  return (\n    <div style={{ margin: '20px' }}>\n      <h2>Dashboard</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"New List Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <button onClick={handleCreateList}>Create List</button>\n      </div>\n      {lists.map((list) => (\n        <div key={list.id}>\n          <h3>{list.title}</h3>\n          <TaskList listId={list.id} onUpdateTaskStatus={handleUpdateTaskStatus} />\n        </div>\n      ))}\n    </div>\n  );\n};\n\nconst TaskList = ({ listId, onUpdateTaskStatus }) => {\n  const [tasks, setTasks] = useState([]);\n\n  const fetchTasks = async () => {\n    try {\n      const taskData = await getTasksForList(listId);\n      setTasks(taskData);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchTasks();\n  }, [listId]);\n\n  return (\n    <div>\n      {tasks.map((task) => (\n        <div key={task.id}>\n          <p>{task.description}</p>\n          <button onClick={() => onUpdateTaskStatus(task.id, 'In Progress')}>Move to In Progress</button>\n          <button onClick={() => onUpdateTaskStatus(task.id, 'Done')}>Move to Done</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}