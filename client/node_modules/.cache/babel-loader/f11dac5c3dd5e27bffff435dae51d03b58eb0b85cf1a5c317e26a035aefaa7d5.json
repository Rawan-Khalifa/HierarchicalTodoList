{"ast":null,"code":"var _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\n// src/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTodoLists, logoutUser } from '../services/api';\nimport TodoList from '../components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [lists, setLists] = useState([]);\n  const navigate = useNavigate();\n  const fetchLists = async () => {\n    try {\n      const data = await getTodoLists();\n      setLists(data);\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n      // If you want to handle 401s manually here, you could do:\n      // if (error.response && error.response.status === 401) {\n      //   navigate('/login');\n      // }\n    }\n  };\n  useEffect(() => {\n    fetchLists();\n  }, []);\n\n  // Logout handler\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      // Once logged out, navigate to login page\n      navigate('/login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), lists.map(lst => /*#__PURE__*/_jsxDEV(TodoList, {\n      listId: lst.id,\n      title: lst.title\n    }, lst.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"NoX0H3N5SeRCzHJIetBfxcPBkws=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getTodoLists","logoutUser","TodoList","jsxDEV","_jsxDEV","Dashboard","_s","lists","setLists","navigate","fetchLists","data","error","console","handleLogout","style","margin","children","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","lst","listId","id","title","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/pages/Dashboard.js"],"sourcesContent":["// src/pages/Dashboard.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getTodoLists, logoutUser } from '../services/api';\nimport TodoList from '../components/TodoList';\n\nconst Dashboard = () => {\n  const [lists, setLists] = useState([]);\n  const navigate = useNavigate();\n\n  const fetchLists = async () => {\n    try {\n      const data = await getTodoLists();\n      setLists(data);\n    } catch (error) {\n      console.error('Error fetching lists:', error);\n      // If you want to handle 401s manually here, you could do:\n      // if (error.response && error.response.status === 401) {\n      //   navigate('/login');\n      // }\n    }\n  };\n\n  useEffect(() => {\n    fetchLists();\n  }, []);\n\n  // Logout handler\n  const handleLogout = async () => {\n    try {\n      await logoutUser();\n      // Once logged out, navigate to login page\n      navigate('/login');\n    } catch (error) {\n      console.error('Error logging out:', error);\n    }\n  };\n\n  return (\n    <div style={{ margin: '20px' }}>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <h2>Dashboard</h2>\n        <button onClick={handleLogout}>Logout</button>\n      </div>\n\n      {lists.map((lst) => (\n        <TodoList\n          key={lst.id}\n          listId={lst.id}\n          title={lst.title}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,UAAU,QAAQ,iBAAiB;AAC1D,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,IAAI,GAAG,MAAMX,YAAY,CAAC,CAAC;MACjCQ,QAAQ,CAACG,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C;MACA;MACA;MACA;IACF;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdY,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMI,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMb,UAAU,CAAC,CAAC;MAClB;MACAQ,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACER,OAAA;IAAKW,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC7Bb,OAAA;MAAKW,KAAK,EAAE;QAAEG,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,eAAe;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAH,QAAA,gBACrFb,OAAA;QAAAa,QAAA,EAAI;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBpB,OAAA;QAAQqB,OAAO,EAAEX,YAAa;QAAAG,QAAA,EAAC;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAELjB,KAAK,CAACmB,GAAG,CAAEC,GAAG,iBACbvB,OAAA,CAACF,QAAQ;MAEP0B,MAAM,EAAED,GAAG,CAACE,EAAG;MACfC,KAAK,EAAEH,GAAG,CAACG;IAAM,GAFZH,GAAG,CAACE,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGZ,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAClB,EAAA,CAhDID,SAAS;EAAA,QAEIN,WAAW;AAAA;AAAAgC,EAAA,GAFxB1B,SAAS;AAkDf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}