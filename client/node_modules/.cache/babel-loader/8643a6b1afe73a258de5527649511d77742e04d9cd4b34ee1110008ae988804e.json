{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from \"react\";\nimport { X, MoveVertical, List, FolderTree } from \"lucide-react\";\nimport api from \"../services/api\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoveTaskModal = ({\n  isOpen,\n  onClose,\n  onMove,\n  lists,\n  currentListId,\n  taskTitle,\n  task,\n  fetchTasks\n}) => {\n  _s();\n  var _lists$find;\n  const [selectedListId, setSelectedListId] = useState(\"\");\n  const [selectedParentId, setSelectedParentId] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [moveType, setMoveType] = useState(\"list\"); // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([]);\n  const [potentialParents, setPotentialParents] = useState([]);\n  const [isLoadingParents, setIsLoadingParents] = useState(false);\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter(list => list.id !== currentListId);\n      setFilteredLists(filtered);\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\");\n      setSelectedParentId(\"\");\n      setMoveType(\"list\");\n    }\n  }, [isOpen, lists, currentListId]);\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    setIsLoadingParents(true);\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId;\n      const response = await api.get(`/api/todos/tasks/${listId}`);\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter(t => {\n          if (t.id === taskId) return false;\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId);\n          }\n          return true;\n        });\n      };\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id);\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach(t => {\n          result.push({\n            id: t.id,\n            title: t.title,\n            depth\n          });\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result);\n          }\n        });\n        return result;\n      };\n      const flatTasks = flattenTasks(filteredTasks);\n      setPotentialParents(flatTasks);\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error);\n    } finally {\n      setIsLoadingParents(false);\n    }\n  }, [selectedListId, currentListId, task.id]);\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen) {\n      fetchPotentialParents();\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents]);\n  if (!isOpen) return null;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (moveType === \"list\" && !selectedListId) return;\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return;\n    setIsSubmitting(true);\n    try {\n      if (moveType === \"list\") {\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null // Make it a top-level task\n        });\n      } else {\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId;\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId;\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId\n        });\n      }\n      await fetchTasks();\n      onClose();\n    } catch (error) {\n      console.error(\"Failed to move task:\", error);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Move Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"modal-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(MoveVertical, {\n              size: 16,\n              className: \"icon\",\n              style: {\n                marginRight: \"8px\",\n                verticalAlign: \"middle\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), \"Moving: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: taskTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Move Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-type-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `move-type-option ${moveType === \"list\" ? \"selected\" : \"\"}`,\n              onClick: () => setMoveType(\"list\"),\n              children: [/*#__PURE__*/_jsxDEV(List, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Move to Another List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `move-type-option ${moveType === \"parent\" ? \"selected\" : \"\"}`,\n              onClick: () => setMoveType(\"parent\"),\n              children: [/*#__PURE__*/_jsxDEV(FolderTree, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Change Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), moveType === \"list\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"destinationList\",\n            children: \"Select Destination List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this), filteredLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-lists-message\",\n            children: \"No other lists available. Create a new list first.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"destinationList\",\n            value: selectedListId,\n            onChange: e => setSelectedListId(e.target.value),\n            className: \"list-select\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select a list --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: list.id,\n              children: list.title\n            }, list.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), moveType === \"parent\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"destinationList\",\n              children: \"Select List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"destinationList\",\n              value: selectedListId,\n              onChange: e => {\n                setSelectedListId(e.target.value);\n                setSelectedParentId(\"\");\n              },\n              className: \"list-select\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: [\"Current List (\", (_lists$find = lists.find(l => l.id === currentListId)) === null || _lists$find === void 0 ? void 0 : _lists$find.title, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: list.id,\n                children: list.title\n              }, list.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"parentTask\",\n              children: \"Select Parent Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), isLoadingParents ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-spinner-small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"parentTask\",\n              value: selectedParentId,\n              onChange: e => setSelectedParentId(e.target.value),\n              className: \"list-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"root\",\n                children: \"-- Make a top-level task --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 21\n              }, this), potentialParents.map(parent => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: parent.id,\n                children: [Array(parent.depth).fill(\"— \").join(\"\"), \" \", parent.title]\n              }, parent.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"btn btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting || moveType === \"list\" && (!selectedListId || filteredLists.length === 0) || moveType === \"parent\" && isLoadingParents,\n            className: \"btn btn-primary\",\n            children: isSubmitting ? \"Moving...\" : \"Move Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveTaskModal, \"IqxZUZ34LgvsoCJRkDwU0GgSAZU=\");\n_c = MoveTaskModal;\nexport default MoveTaskModal;\nvar _c;\n$RefreshReg$(_c, \"MoveTaskModal\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","X","MoveVertical","List","FolderTree","api","jsxDEV","_jsxDEV","Fragment","_Fragment","MoveTaskModal","isOpen","onClose","onMove","lists","currentListId","taskTitle","task","fetchTasks","_lists$find","selectedListId","setSelectedListId","selectedParentId","setSelectedParentId","isSubmitting","setIsSubmitting","moveType","setMoveType","filteredLists","setFilteredLists","potentialParents","setPotentialParents","isLoadingParents","setIsLoadingParents","filtered","filter","list","id","fetchPotentialParents","listId","response","get","filterTaskAndDescendants","tasks","taskId","t","subtasks","length","filteredTasks","data","flattenTasks","depth","result","forEach","push","title","flatTasks","error","console","handleSubmit","e","preventDefault","patch","list_id","parent_id","targetListId","parentId","className","children","fileName","lineNumber","columnNumber","onClick","size","onSubmit","style","marginRight","verticalAlign","type","htmlFor","value","onChange","target","required","map","find","l","parent","Array","fill","join","disabled","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback } from \"react\"\nimport { X, MoveVertical, List, FolderTree } from \"lucide-react\"\nimport api from \"../services/api\"\nimport \"./Modal.css\"\n\nconst MoveTaskModal = ({ isOpen, onClose, onMove, lists, currentListId, taskTitle, task, fetchTasks }) => {\n  const [selectedListId, setSelectedListId] = useState(\"\")\n  const [selectedParentId, setSelectedParentId] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [moveType, setMoveType] = useState(\"list\") // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([])\n  const [potentialParents, setPotentialParents] = useState([])\n  const [isLoadingParents, setIsLoadingParents] = useState(false)\n\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter((list) => list.id !== currentListId)\n      setFilteredLists(filtered)\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\")\n      setSelectedParentId(\"\")\n      setMoveType(\"list\")\n    }\n  }, [isOpen, lists, currentListId])\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    setIsLoadingParents(true)\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId\n      const response = await api.get(`/api/todos/tasks/${listId}`)\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter((t) => {\n          if (t.id === taskId) return false\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId)\n          }\n\n          return true\n        })\n      }\n\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id)\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach((t) => {\n          result.push({\n            id: t.id,\n            title: t.title,\n            depth,\n          })\n\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result)\n          }\n        })\n        return result\n      }\n\n      const flatTasks = flattenTasks(filteredTasks)\n      setPotentialParents(flatTasks)\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error)\n    } finally {\n      setIsLoadingParents(false)\n    }\n  }, [selectedListId, currentListId, task.id])\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen) {\n      fetchPotentialParents()\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents])\n\n  if (!isOpen) return null\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (moveType === \"list\" && !selectedListId) return\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return\n\n    setIsSubmitting(true)\n    try {\n      if (moveType === \"list\") {\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null, // Make it a top-level task\n        })\n      } else {\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId\n\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId,\n        })\n      }\n\n      await fetchTasks()\n      onClose()\n    } catch (error) {\n      console.error(\"Failed to move task:\", error)\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>Move Task</h2>\n          <button onClick={onClose} className=\"close-button\">\n            <X size={20} />\n          </button>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"modal-form\">\n          <div className=\"form-group\">\n            <label>\n              <MoveVertical size={16} className=\"icon\" style={{ marginRight: \"8px\", verticalAlign: \"middle\" }} />\n              Moving: <strong>{taskTitle}</strong>\n            </label>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Move Type</label>\n            <div className=\"move-type-selector\">\n              <button\n                type=\"button\"\n                className={`move-type-option ${moveType === \"list\" ? \"selected\" : \"\"}`}\n                onClick={() => setMoveType(\"list\")}\n              >\n                <List size={16} />\n                <span>Move to Another List</span>\n              </button>\n              <button\n                type=\"button\"\n                className={`move-type-option ${moveType === \"parent\" ? \"selected\" : \"\"}`}\n                onClick={() => setMoveType(\"parent\")}\n              >\n                <FolderTree size={16} />\n                <span>Change Parent Task</span>\n              </button>\n            </div>\n          </div>\n\n          {moveType === \"list\" && (\n            <div className=\"form-group\">\n              <label htmlFor=\"destinationList\">Select Destination List</label>\n              {filteredLists.length === 0 ? (\n                <p className=\"no-lists-message\">No other lists available. Create a new list first.</p>\n              ) : (\n                <select\n                  id=\"destinationList\"\n                  value={selectedListId}\n                  onChange={(e) => setSelectedListId(e.target.value)}\n                  className=\"list-select\"\n                  required\n                >\n                  <option value=\"\">-- Select a list --</option>\n                  {filteredLists.map((list) => (\n                    <option key={list.id} value={list.id}>\n                      {list.title}\n                    </option>\n                  ))}\n                </select>\n              )}\n            </div>\n          )}\n\n          {moveType === \"parent\" && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"destinationList\">Select List</label>\n                <select\n                  id=\"destinationList\"\n                  value={selectedListId}\n                  onChange={(e) => {\n                    setSelectedListId(e.target.value)\n                    setSelectedParentId(\"\")\n                  }}\n                  className=\"list-select\"\n                >\n                  <option value=\"\">Current List ({lists.find((l) => l.id === currentListId)?.title})</option>\n                  {filteredLists.map((list) => (\n                    <option key={list.id} value={list.id}>\n                      {list.title}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"parentTask\">Select Parent Task</label>\n                {isLoadingParents ? (\n                  <div className=\"loading-spinner-small\"></div>\n                ) : (\n                  <select\n                    id=\"parentTask\"\n                    value={selectedParentId}\n                    onChange={(e) => setSelectedParentId(e.target.value)}\n                    className=\"list-select\"\n                    required\n                  >\n                    <option value=\"root\">-- Make a top-level task --</option>\n                    {potentialParents.map((parent) => (\n                      <option key={parent.id} value={parent.id}>\n                        {Array(parent.depth).fill(\"— \").join(\"\")} {parent.title}\n                      </option>\n                    ))}\n                  </select>\n                )}\n              </div>\n            </>\n          )}\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" onClick={onClose} className=\"btn btn-secondary\">\n              Cancel\n            </button>\n            <button\n              type=\"submit\"\n              disabled={\n                isSubmitting ||\n                (moveType === \"list\" && (!selectedListId || filteredLists.length === 0)) ||\n                (moveType === \"parent\" && isLoadingParents)\n              }\n              className=\"btn btn-primary\"\n            >\n              {isSubmitting ? \"Moving...\" : \"Move Task\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default MoveTaskModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}