{"ast":null,"code":"import axios from \"axios\";\n\n// Create axios instance with base URL and credentials\nconst api = axios.create({\n  baseURL: \"http://localhost:5001/api\",\n  withCredentials: true\n});\n\n// Authentication\nexport const registerUser = async (username, password) => {\n  const response = await api.post(\"/auth/register\", {\n    username,\n    password\n  });\n  return response.data;\n};\nexport const loginUser = async (username, password) => {\n  const response = await api.post(\"/auth/login\", {\n    username,\n    password\n  });\n  // Store user info in localStorage to match your existing authentication check\n  localStorage.setItem(\"user\", JSON.stringify({\n    username\n  }));\n  localStorage.setItem(\"token\", response.data.token);\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n  return response.data;\n};\nexport const logoutUser = async () => {\n  const response = await api.post(\"/auth/logout\");\n  localStorage.removeItem(\"user\");\n  localStorage.removeItem(\"token\");\n  delete api.defaults.headers.common[\"Authorization\"];\n  return response.data;\n};\n\n// Todo Lists - renamed to match your existing component\nexport const getTodoLists = async () => {\n  const response = await api.get(\"/todos/lists\");\n  return response.data;\n};\nexport const createList = async title => {\n  const response = await api.post(\"/todos/list\", {\n    title\n  });\n  return response.data;\n};\n\n// Tasks\nexport const getTasks = async listId => {\n  const response = await api.get(`/todos/tasks/${listId}`);\n  return response.data;\n};\nexport const createTask = async task => {\n  const response = await api.post(\"/todos/task\", task);\n  return response.data;\n};\nexport const updateTaskStatus = async (taskId, status) => {\n  const response = await api.patch(`/todos/task/${taskId}/status`, {\n    status\n  });\n  return response.data;\n};\n\n// Set token on app initialization\nconst token = localStorage.getItem(\"token\");\nif (token) {\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\n}\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","withCredentials","registerUser","username","password","response","post","data","loginUser","localStorage","setItem","JSON","stringify","token","defaults","headers","common","logoutUser","removeItem","getTodoLists","get","createList","title","getTasks","listId","createTask","task","updateTaskStatus","taskId","status","patch","getItem"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\"\n\n// Create axios instance with base URL and credentials\nconst api = axios.create({\n  baseURL: \"http://localhost:5001/api\",\n  withCredentials: true,\n})\n\n// Authentication\nexport const registerUser = async (username, password) => {\n  const response = await api.post(\"/auth/register\", { username, password })\n  return response.data\n}\n\nexport const loginUser = async (username, password) => {\n  const response = await api.post(\"/auth/login\", { username, password })\n  // Store user info in localStorage to match your existing authentication check\n  localStorage.setItem(\"user\", JSON.stringify({ username }))\n  localStorage.setItem(\"token\", response.data.token)\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`\n  return response.data\n}\n\nexport const logoutUser = async () => {\n  const response = await api.post(\"/auth/logout\")\n  localStorage.removeItem(\"user\")\n  localStorage.removeItem(\"token\")\n  delete api.defaults.headers.common[\"Authorization\"]\n  return response.data\n}\n\n// Todo Lists - renamed to match your existing component\nexport const getTodoLists = async () => {\n  const response = await api.get(\"/todos/lists\")\n  return response.data\n}\n\nexport const createList = async (title) => {\n  const response = await api.post(\"/todos/list\", { title })\n  return response.data\n}\n\n// Tasks\nexport const getTasks = async (listId) => {\n  const response = await api.get(`/todos/tasks/${listId}`)\n  return response.data\n}\n\nexport const createTask = async (task) => {\n  const response = await api.post(\"/todos/task\", task)\n  return response.data\n}\n\nexport const updateTaskStatus = async (taskId, status) => {\n  const response = await api.patch(`/todos/task/${taskId}/status`, { status })\n  return response.data\n}\n\n// Set token on app initialization\nconst token = localStorage.getItem(\"token\")\nif (token) {\n  api.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`\n}\n\nexport default api;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}