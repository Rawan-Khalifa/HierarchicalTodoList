{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback, useRef } from \"react\";\nimport { X, MoveVertical, List, FolderTree } from \"lucide-react\";\nimport api from \"../services/api\";\nimport { toast } from \"react-toastify\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MoveTaskModal = ({\n  isOpen,\n  onClose,\n  lists,\n  currentListId,\n  taskTitle,\n  task,\n  fetchTasks\n}) => {\n  _s();\n  var _lists$find2;\n  const [selectedListId, setSelectedListId] = useState(\"\");\n  const [selectedParentId, setSelectedParentId] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [moveType, setMoveType] = useState(\"list\"); // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([]);\n  const [potentialParents, setPotentialParents] = useState([]);\n  const modalContentRef = useRef(null);\n  const requestInProgress = useRef(false);\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter(list => list.id !== currentListId);\n      setFilteredLists(filtered);\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\");\n      setSelectedParentId(\"\");\n      setMoveType(\"list\");\n      setPotentialParents([]);\n      setIsLoading(false);\n      setIsSubmitting(false);\n      requestInProgress.current = false;\n    }\n  }, [isOpen, lists, currentListId]);\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    // Prevent multiple simultaneous requests\n    if (requestInProgress.current) return;\n    requestInProgress.current = true;\n    setIsLoading(true);\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId;\n      const response = await api.get(`/api/todos/tasks/${listId}`);\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter(t => {\n          if (t.id === taskId) return false;\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId);\n          }\n          return true;\n        });\n      };\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id);\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach(t => {\n          result.push({\n            id: t.id,\n            title: t.title,\n            depth\n          });\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result);\n          }\n        });\n        return result;\n      };\n      const flatTasks = flattenTasks(filteredTasks);\n      setPotentialParents(flatTasks);\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error);\n      toast.error(\"Failed to load tasks. Please try again.\");\n    } finally {\n      setIsLoading(false);\n      requestInProgress.current = false;\n    }\n  }, [selectedListId, currentListId, task.id]);\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen && !isSubmitting) {\n      fetchPotentialParents();\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents, isSubmitting]);\n  if (!isOpen) return null;\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (moveType === \"list\" && !selectedListId) return;\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return;\n    if (isSubmitting || isLoading) return;\n    setIsSubmitting(true);\n    try {\n      if (moveType === \"list\") {\n        var _filteredLists$find;\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null // Make it a top-level task\n        });\n        toast.success(`Task moved to ${(_filteredLists$find = filteredLists.find(l => l.id === selectedListId)) === null || _filteredLists$find === void 0 ? void 0 : _filteredLists$find.title}`);\n      } else {\n        var _filteredLists$find2, _lists$find, _potentialParents$fin;\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId;\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId;\n        const targetListName = selectedListId ? (_filteredLists$find2 = filteredLists.find(l => l.id === selectedListId)) === null || _filteredLists$find2 === void 0 ? void 0 : _filteredLists$find2.title : (_lists$find = lists.find(l => l.id === currentListId)) === null || _lists$find === void 0 ? void 0 : _lists$find.title;\n        const parentName = selectedParentId === \"root\" ? \"top level\" : (_potentialParents$fin = potentialParents.find(p => p.id === selectedParentId)) === null || _potentialParents$fin === void 0 ? void 0 : _potentialParents$fin.title;\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId\n        });\n        toast.success(`Task moved to ${parentName ? `\"${parentName}\"` : \"top level\"} in ${targetListName}`);\n      }\n\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks();\n        onClose();\n      }, 300);\n    } catch (error) {\n      console.error(\"Failed to move task:\", error);\n      toast.error(\"Failed to move task. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal move-task-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Move Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        ref: modalContentRef,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"modal-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"task-to-move-label\",\n              children: [/*#__PURE__*/_jsxDEV(MoveVertical, {\n                size: 16,\n                className: \"icon\",\n                style: {\n                  marginRight: \"8px\",\n                  verticalAlign: \"middle\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), \"Moving: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: taskTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Move Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"move-type-selector\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `move-type-option ${moveType === \"list\" ? \"selected\" : \"\"}`,\n                onClick: () => setMoveType(\"list\"),\n                disabled: isSubmitting,\n                children: [/*#__PURE__*/_jsxDEV(List, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Move to Another List\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: `move-type-option ${moveType === \"parent\" ? \"selected\" : \"\"}`,\n                onClick: () => setMoveType(\"parent\"),\n                disabled: isSubmitting,\n                children: [/*#__PURE__*/_jsxDEV(FolderTree, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Change Parent Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), moveType === \"list\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"destinationList\",\n              children: \"Select Destination List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this), filteredLists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-lists-message\",\n              children: \"No other lists available. Create a new list first.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"destinationList\",\n              value: selectedListId,\n              onChange: e => setSelectedListId(e.target.value),\n              className: \"list-select\",\n              required: true,\n              disabled: isSubmitting,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a list --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 21\n              }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: list.id,\n                children: list.title\n              }, list.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 23\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this), moveType === \"parent\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"destinationList\",\n                children: \"Select List\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"destinationList\",\n                value: selectedListId,\n                onChange: e => {\n                  setSelectedListId(e.target.value);\n                  setSelectedParentId(\"\");\n                },\n                className: \"list-select\",\n                disabled: isSubmitting || isLoading,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: [\"Current List (\", (_lists$find2 = lists.find(l => l.id === currentListId)) === null || _lists$find2 === void 0 ? void 0 : _lists$find2.title, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this), filteredLists.map(list => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: list.id,\n                  children: list.title\n                }, list.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"parentTask\",\n                children: \"Select Parent Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"loading-container-small\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"loading-spinner-small\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Loading tasks...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"parentTask\",\n                  value: selectedParentId,\n                  onChange: e => setSelectedParentId(e.target.value),\n                  className: \"list-select parent-select\",\n                  required: true,\n                  disabled: isSubmitting,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"root\",\n                    children: \"-- Make a top-level task --\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 259,\n                    columnNumber: 25\n                  }, this), potentialParents.map(parent => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: parent.id,\n                    children: [Array(parent.depth).fill(\"— \").join(\"\"), \" \", parent.title]\n                  }, parent.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 27\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 23\n                }, this), potentialParents.length === 0 && !isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"no-tasks-message\",\n                  children: \"No available parent tasks in this list.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: onClose,\n              className: \"btn btn-secondary\",\n              disabled: isSubmitting,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting || isLoading || moveType === \"list\" && (!selectedListId || filteredLists.length === 0) || moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\",\n              className: \"btn btn-primary\",\n              children: isSubmitting ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"btn-spinner\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 21\n                }, this), \"Moving...\"]\n              }, void 0, true) : \"Move Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveTaskModal, \"uVx0kNDeGTvQ4709zqARldDt2X8=\");\n_c = MoveTaskModal;\nexport default MoveTaskModal;\nvar _c;\n$RefreshReg$(_c, \"MoveTaskModal\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","useCallback","useRef","X","MoveVertical","List","FolderTree","api","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","MoveTaskModal","isOpen","onClose","lists","currentListId","taskTitle","task","fetchTasks","_lists$find2","selectedListId","setSelectedListId","selectedParentId","setSelectedParentId","isSubmitting","setIsSubmitting","isLoading","setIsLoading","moveType","setMoveType","filteredLists","setFilteredLists","potentialParents","setPotentialParents","modalContentRef","requestInProgress","filtered","filter","list","id","current","fetchPotentialParents","listId","response","get","filterTaskAndDescendants","tasks","taskId","t","subtasks","length","filteredTasks","data","flattenTasks","depth","result","forEach","push","title","flatTasks","error","console","handleSubmit","e","preventDefault","_filteredLists$find","patch","list_id","parent_id","success","find","l","_filteredLists$find2","_lists$find","_potentialParents$fin","targetListId","parentId","targetListName","parentName","p","setTimeout","className","children","fileName","lineNumber","columnNumber","onClick","size","ref","onSubmit","style","marginRight","verticalAlign","type","disabled","htmlFor","value","onChange","target","required","map","parent","Array","fill","join","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/MoveTaskModal.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect, useCallback, useRef } from \"react\"\nimport { X, MoveVertical, List, FolderTree } from \"lucide-react\"\nimport api from \"../services/api\"\nimport { toast } from \"react-toastify\"\nimport \"./Modal.css\"\n\nconst MoveTaskModal = ({ isOpen, onClose, lists, currentListId, taskTitle, task, fetchTasks }) => {\n  const [selectedListId, setSelectedListId] = useState(\"\")\n  const [selectedParentId, setSelectedParentId] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [moveType, setMoveType] = useState(\"list\") // \"list\" or \"parent\"\n  const [filteredLists, setFilteredLists] = useState([])\n  const [potentialParents, setPotentialParents] = useState([])\n  const modalContentRef = useRef(null)\n  const requestInProgress = useRef(false)\n\n  useEffect(() => {\n    if (isOpen && lists) {\n      // Filter out the current list for list movement\n      const filtered = lists.filter((list) => list.id !== currentListId)\n      setFilteredLists(filtered)\n\n      // Reset selected values when modal opens\n      setSelectedListId(\"\")\n      setSelectedParentId(\"\")\n      setMoveType(\"list\")\n      setPotentialParents([])\n      setIsLoading(false)\n      setIsSubmitting(false)\n      requestInProgress.current = false\n    }\n  }, [isOpen, lists, currentListId])\n\n  // Fetch potential parent tasks when moveType changes to \"parent\"\n  const fetchPotentialParents = useCallback(async () => {\n    // Prevent multiple simultaneous requests\n    if (requestInProgress.current) return\n\n    requestInProgress.current = true\n    setIsLoading(true)\n\n    try {\n      // Fetch tasks from the selected list or current list if none selected\n      const listId = selectedListId || currentListId\n      const response = await api.get(`/api/todos/tasks/${listId}`)\n\n      // Filter out the current task and its subtasks (can't move a task to be its own child)\n      const filterTaskAndDescendants = (tasks, taskId) => {\n        return tasks.filter((t) => {\n          if (t.id === taskId) return false\n\n          // Also filter out any descendants\n          if (t.subtasks && t.subtasks.length > 0) {\n            t.subtasks = filterTaskAndDescendants(t.subtasks, taskId)\n          }\n\n          return true\n        })\n      }\n\n      const filteredTasks = filterTaskAndDescendants(response.data, task.id)\n\n      // Flatten the task hierarchy for the dropdown\n      const flattenTasks = (tasks, depth = 0, result = []) => {\n        tasks.forEach((t) => {\n          result.push({\n            id: t.id,\n            title: t.title,\n            depth,\n          })\n\n          if (t.subtasks && t.subtasks.length > 0) {\n            flattenTasks(t.subtasks, depth + 1, result)\n          }\n        })\n        return result\n      }\n\n      const flatTasks = flattenTasks(filteredTasks)\n      setPotentialParents(flatTasks)\n    } catch (error) {\n      console.error(\"Failed to fetch potential parent tasks:\", error)\n      toast.error(\"Failed to load tasks. Please try again.\")\n    } finally {\n      setIsLoading(false)\n      requestInProgress.current = false\n    }\n  }, [selectedListId, currentListId, task.id])\n\n  // Update the useEffect to include fetchPotentialParents in the dependency array\n  useEffect(() => {\n    if (moveType === \"parent\" && isOpen && !isSubmitting) {\n      fetchPotentialParents()\n    }\n  }, [moveType, isOpen, selectedListId, fetchPotentialParents, isSubmitting])\n\n  if (!isOpen) return null\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (moveType === \"list\" && !selectedListId) return\n    if (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\") return\n    if (isSubmitting || isLoading) return\n\n    setIsSubmitting(true)\n    try {\n      if (moveType === \"list\") {\n        // Move to another list\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: selectedListId,\n          parent_id: null, // Make it a top-level task\n        })\n        toast.success(`Task moved to ${filteredLists.find((l) => l.id === selectedListId)?.title}`)\n      } else {\n        // Move to be a child of another task or to be a top-level task\n        const targetListId = selectedListId || currentListId\n        const parentId = selectedParentId === \"root\" ? null : selectedParentId\n\n        const targetListName = selectedListId\n          ? filteredLists.find((l) => l.id === selectedListId)?.title\n          : lists.find((l) => l.id === currentListId)?.title\n\n        const parentName =\n          selectedParentId === \"root\" ? \"top level\" : potentialParents.find((p) => p.id === selectedParentId)?.title\n\n        await api.patch(`/api/todos/task/${task.id}/move`, {\n          list_id: targetListId,\n          parent_id: parentId,\n        })\n\n        toast.success(`Task moved to ${parentName ? `\"${parentName}\"` : \"top level\"} in ${targetListName}`)\n      }\n\n      // Wait a moment before fetching to ensure the server has processed the change\n      setTimeout(() => {\n        fetchTasks()\n        onClose()\n      }, 300)\n    } catch (error) {\n      console.error(\"Failed to move task:\", error)\n      toast.error(\"Failed to move task. Please try again.\")\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal move-task-modal\">\n        <div className=\"modal-header\">\n          <h2>Move Task</h2>\n          <button onClick={onClose} className=\"close-button\">\n            <X size={20} />\n          </button>\n        </div>\n\n        <div className=\"modal-content\" ref={modalContentRef}>\n          <form onSubmit={handleSubmit} className=\"modal-form\">\n            <div className=\"form-group\">\n              <label className=\"task-to-move-label\">\n                <MoveVertical size={16} className=\"icon\" style={{ marginRight: \"8px\", verticalAlign: \"middle\" }} />\n                Moving: <strong>{taskTitle}</strong>\n              </label>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Move Type</label>\n              <div className=\"move-type-selector\">\n                <button\n                  type=\"button\"\n                  className={`move-type-option ${moveType === \"list\" ? \"selected\" : \"\"}`}\n                  onClick={() => setMoveType(\"list\")}\n                  disabled={isSubmitting}\n                >\n                  <List size={16} />\n                  <span>Move to Another List</span>\n                </button>\n                <button\n                  type=\"button\"\n                  className={`move-type-option ${moveType === \"parent\" ? \"selected\" : \"\"}`}\n                  onClick={() => setMoveType(\"parent\")}\n                  disabled={isSubmitting}\n                >\n                  <FolderTree size={16} />\n                  <span>Change Parent Task</span>\n                </button>\n              </div>\n            </div>\n\n            {moveType === \"list\" && (\n              <div className=\"form-group\">\n                <label htmlFor=\"destinationList\">Select Destination List</label>\n                {filteredLists.length === 0 ? (\n                  <p className=\"no-lists-message\">No other lists available. Create a new list first.</p>\n                ) : (\n                  <select\n                    id=\"destinationList\"\n                    value={selectedListId}\n                    onChange={(e) => setSelectedListId(e.target.value)}\n                    className=\"list-select\"\n                    required\n                    disabled={isSubmitting}\n                  >\n                    <option value=\"\">-- Select a list --</option>\n                    {filteredLists.map((list) => (\n                      <option key={list.id} value={list.id}>\n                        {list.title}\n                      </option>\n                    ))}\n                  </select>\n                )}\n              </div>\n            )}\n\n            {moveType === \"parent\" && (\n              <>\n                <div className=\"form-group\">\n                  <label htmlFor=\"destinationList\">Select List</label>\n                  <select\n                    id=\"destinationList\"\n                    value={selectedListId}\n                    onChange={(e) => {\n                      setSelectedListId(e.target.value)\n                      setSelectedParentId(\"\")\n                    }}\n                    className=\"list-select\"\n                    disabled={isSubmitting || isLoading}\n                  >\n                    <option value=\"\">Current List ({lists.find((l) => l.id === currentListId)?.title})</option>\n                    {filteredLists.map((list) => (\n                      <option key={list.id} value={list.id}>\n                        {list.title}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"parentTask\">Select Parent Task</label>\n                  {isLoading ? (\n                    <div className=\"loading-container-small\">\n                      <div className=\"loading-spinner-small\"></div>\n                      <span>Loading tasks...</span>\n                    </div>\n                  ) : (\n                    <>\n                      <select\n                        id=\"parentTask\"\n                        value={selectedParentId}\n                        onChange={(e) => setSelectedParentId(e.target.value)}\n                        className=\"list-select parent-select\"\n                        required\n                        disabled={isSubmitting}\n                      >\n                        <option value=\"root\">-- Make a top-level task --</option>\n                        {potentialParents.map((parent) => (\n                          <option key={parent.id} value={parent.id}>\n                            {Array(parent.depth).fill(\"— \").join(\"\")} {parent.title}\n                          </option>\n                        ))}\n                      </select>\n                      {potentialParents.length === 0 && !isLoading && (\n                        <p className=\"no-tasks-message\">No available parent tasks in this list.</p>\n                      )}\n                    </>\n                  )}\n                </div>\n              </>\n            )}\n\n            <div className=\"modal-footer\">\n              <button type=\"button\" onClick={onClose} className=\"btn btn-secondary\" disabled={isSubmitting}>\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={\n                  isSubmitting ||\n                  isLoading ||\n                  (moveType === \"list\" && (!selectedListId || filteredLists.length === 0)) ||\n                  (moveType === \"parent\" && !selectedParentId && selectedParentId !== \"root\")\n                }\n                className=\"btn btn-primary\"\n              >\n                {isSubmitting ? (\n                  <>\n                    <div className=\"btn-spinner\"></div>\n                    Moving...\n                  </>\n                ) : (\n                  \"Move Task\"\n                )}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MoveTaskModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}