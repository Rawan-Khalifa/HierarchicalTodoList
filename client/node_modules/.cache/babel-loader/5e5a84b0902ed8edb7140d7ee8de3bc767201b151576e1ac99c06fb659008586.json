{"ast":null,"code":"// src/services/api.js\nimport axios from 'axios';\naxios.defaults.withCredentials = true; // Always send cookies\n\n// Use .env or default localhost\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:5000';\n\n// Create a new TodoList\nexport const createTodoList = async title => {\n  const response = await axios.post(`${API_URL}/api/todos/list`, {\n    title\n  });\n  return response.data;\n};\n\n// Get all TodoLists for the current user\nexport const getTodoLists = async () => {\n  const response = await axios.get(`${API_URL}/api/todos/lists`, {\n    withCredentials: true\n  });\n  return response.data; // array of {id, title}\n};\n\n// Create a new Task or subtask\nexport const addTask = async (title, description, status, listId, parentId) => {\n  const response = await axios.post(`${API_URL}/api/todos/task`, {\n    title,\n    description,\n    status,\n    list_id: listId,\n    parent_id: parentId\n  });\n  return response.data;\n};\n\n// Get tasks (with subtasks) for a given list\nexport const getTasksForList = async listId => {\n  const response = await axios.get(`${API_URL}/api/todos/tasks/${listId}`, {\n    withCredentials: true\n  });\n  return response.data; // top-level tasks + subtasks\n};\n\n// Update task status\nexport const updateTaskStatus = async (taskId, newStatus) => {\n  const response = await axios.patch(`${API_URL}/api/todos/task/${taskId}/status`, {\n    status: newStatus\n  });\n  return response.data;\n};\n\n/**\n * Log in a user.\n * Calls POST /api/auth/login\n * Body: { username, password }\n */\nexport const loginUser = async (username, password) => {\n  const response = await axios.post(`${API_URL}/api/auth/login`, {\n    username,\n    password\n  }, {\n    withCredentials: true\n  });\n  return response.data;\n};\n\n/**\n * Register a new user.\n * Calls POST /api/auth/register\n * Body: { username, password }\n */\nexport const registerUser = async (username, password) => {\n  const response = await axios.post(`${API_URL}/api/auth/register`, {\n    username,\n    password\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","defaults","withCredentials","API_URL","process","env","REACT_APP_API_URL","createTodoList","title","response","post","data","getTodoLists","get","addTask","description","status","listId","parentId","list_id","parent_id","getTasksForList","updateTaskStatus","taskId","newStatus","patch","loginUser","username","password","registerUser"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/services/api.js"],"sourcesContent":["// src/services/api.js\nimport axios from 'axios';\n\naxios.defaults.withCredentials = true; // Always send cookies\n\n// Use .env or default localhost\nconst API_URL = process.env.REACT_APP_API_URL || 'http://127.0.0.1:5000';\n\n// Create a new TodoList\nexport const createTodoList = async (title) => {\n  const response = await axios.post(`${API_URL}/api/todos/list`, { title });\n  return response.data;\n};\n\n// Get all TodoLists for the current user\nexport const getTodoLists = async () => {\n  const response = await axios.get(`${API_URL}/api/todos/lists`, { withCredentials: true });\n  return response.data; // array of {id, title}\n};\n\n// Create a new Task or subtask\nexport const addTask = async (title, description, status, listId, parentId) => {\n  const response = await axios.post(`${API_URL}/api/todos/task`, {\n    title,\n    description,\n    status,\n    list_id: listId,\n    parent_id: parentId,\n  });\n  return response.data;\n};\n\n// Get tasks (with subtasks) for a given list\nexport const getTasksForList = async (listId) => {\n  const response = await axios.get(`${API_URL}/api/todos/tasks/${listId}`, { withCredentials: true });\n  return response.data; // top-level tasks + subtasks\n};\n\n// Update task status\nexport const updateTaskStatus = async (taskId, newStatus) => {\n  const response = await axios.patch(`${API_URL}/api/todos/task/${taskId}/status`, {\n    status: newStatus,\n  });\n  return response.data;\n};\n\n\n/**\n * Log in a user.\n * Calls POST /api/auth/login\n * Body: { username, password }\n */\nexport const loginUser = async (username, password) => {\n    const response = await axios.post(`${API_URL}/api/auth/login`, {\n      username,\n      password,\n    }, { withCredentials: true });\n    return response.data;\n  };\n  \n  /**\n   * Register a new user.\n   * Calls POST /api/auth/register\n   * Body: { username, password }\n   */\n  export const registerUser = async (username, password) => {\n    const response = await axios.post(`${API_URL}/api/auth/register`, {\n      username,\n      password,\n    });\n    return response.data;\n  };\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,eAAe,GAAG,IAAI,CAAC,CAAC;;AAEvC;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA,OAAO,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGP,OAAO,iBAAiB,EAAE;IAAEK;EAAM,CAAC,CAAC;EACzE,OAAOC,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,MAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACa,GAAG,CAAC,GAAGV,OAAO,kBAAkB,EAAE;IAAED,eAAe,EAAE;EAAK,CAAC,CAAC;EACzF,OAAOO,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMG,OAAO,GAAG,MAAAA,CAAON,KAAK,EAAEO,WAAW,EAAEC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,KAAK;EAC7E,MAAMT,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGP,OAAO,iBAAiB,EAAE;IAC7DK,KAAK;IACLO,WAAW;IACXC,MAAM;IACNG,OAAO,EAAEF,MAAM;IACfG,SAAS,EAAEF;EACb,CAAC,CAAC;EACF,OAAOT,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,OAAO,MAAMU,eAAe,GAAG,MAAOJ,MAAM,IAAK;EAC/C,MAAMR,QAAQ,GAAG,MAAMT,KAAK,CAACa,GAAG,CAAC,GAAGV,OAAO,oBAAoBc,MAAM,EAAE,EAAE;IAAEf,eAAe,EAAE;EAAK,CAAC,CAAC;EACnG,OAAOO,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMW,gBAAgB,GAAG,MAAAA,CAAOC,MAAM,EAAEC,SAAS,KAAK;EAC3D,MAAMf,QAAQ,GAAG,MAAMT,KAAK,CAACyB,KAAK,CAAC,GAAGtB,OAAO,mBAAmBoB,MAAM,SAAS,EAAE;IAC/EP,MAAM,EAAEQ;EACV,CAAC,CAAC;EACF,OAAOf,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMe,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACnD,MAAMnB,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGP,OAAO,iBAAiB,EAAE;IAC7DwB,QAAQ;IACRC;EACF,CAAC,EAAE;IAAE1B,eAAe,EAAE;EAAK,CAAC,CAAC;EAC7B,OAAOO,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACF;AACA;AACA;AACA;AACE,OAAO,MAAMkB,YAAY,GAAG,MAAAA,CAAOF,QAAQ,EAAEC,QAAQ,KAAK;EACxD,MAAMnB,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAC,GAAGP,OAAO,oBAAoB,EAAE;IAChEwB,QAAQ;IACRC;EACF,CAAC,CAAC;EACF,OAAOnB,QAAQ,CAACE,IAAI;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}