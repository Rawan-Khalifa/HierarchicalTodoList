{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/CreateListModal.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { X } from \"lucide-react\";\nimport \"./Modal.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateListModal = ({\n  isOpen,\n  onClose,\n  onCreate,\n  lists\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [existingListNames, setExistingListNames] = useState([]);\n  useEffect(() => {\n    // Reset form when modal opens and prepare list of existing list names\n    if (isOpen) {\n      setTitle(\"\");\n      setError(\"\");\n      if (lists && lists.length > 0) {\n        setExistingListNames(lists.map(list => list.title.toLowerCase()));\n      } else {\n        setExistingListNames([]);\n      }\n    }\n  }, [isOpen, lists]);\n  if (!isOpen) return null;\n  const validateTitle = title => {\n    if (!title.trim()) {\n      setError(\"List title cannot be empty\");\n      return false;\n    }\n    if (existingListNames.includes(title.trim().toLowerCase())) {\n      setError(\"A list with this name already exists\");\n      return false;\n    }\n    setError(\"\");\n    return true;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateTitle(title)) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      await onCreate(title);\n      setTitle(\"\");\n    } catch (error) {\n      setError(\"Failed to create list. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create New List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClose,\n          className: \"close-button\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-body\",\n          children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-error\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"List Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              value: title,\n              onChange: e => {\n                setTitle(e.target.value);\n                // Clear error when user types\n                if (error) validateTitle(e.target.value);\n              },\n              placeholder: \"Enter list title\",\n              autoFocus: true,\n              className: error ? \"input-error\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button secondary\",\n            onClick: onClose,\n            disabled: isSubmitting,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button primary\",\n            disabled: isSubmitting || !title.trim(),\n            children: isSubmitting ? \"Creating...\" : \"Create List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateListModal, \"WYDcSvIkCzw7gDQuBf8RHGweqf0=\");\n_c = CreateListModal;\nexport default CreateListModal;\nvar _c;\n$RefreshReg$(_c, \"CreateListModal\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","X","jsxDEV","_jsxDEV","CreateListModal","isOpen","onClose","onCreate","lists","title","setTitle","isSubmitting","setIsSubmitting","error","setError","existingListNames","setExistingListNames","length","map","list","toLowerCase","validateTitle","trim","includes","handleSubmit","e","preventDefault","className","children","fileName","lineNumber","columnNumber","onClick","size","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","autoFocus","disabled","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/CreateListModal.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { X } from \"lucide-react\"\nimport \"./Modal.css\"\n\nconst CreateListModal = ({ isOpen, onClose, onCreate, lists }) => {\n  const [title, setTitle] = useState(\"\")\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [error, setError] = useState(\"\")\n  const [existingListNames, setExistingListNames] = useState([])\n\n  useEffect(() => {\n    // Reset form when modal opens and prepare list of existing list names\n    if (isOpen) {\n      setTitle(\"\")\n      setError(\"\")\n\n      if (lists && lists.length > 0) {\n        setExistingListNames(lists.map((list) => list.title.toLowerCase()))\n      } else {\n        setExistingListNames([])\n      }\n    }\n  }, [isOpen, lists])\n\n  if (!isOpen) return null\n\n  const validateTitle = (title) => {\n    if (!title.trim()) {\n      setError(\"List title cannot be empty\")\n      return false\n    }\n\n    if (existingListNames.includes(title.trim().toLowerCase())) {\n      setError(\"A list with this name already exists\")\n      return false\n    }\n\n    setError(\"\")\n    return true\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    if (!validateTitle(title)) {\n      return\n    }\n\n    setIsSubmitting(true)\n\n    try {\n      await onCreate(title)\n      setTitle(\"\")\n    } catch (error) {\n      setError(\"Failed to create list. Please try again.\")\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <div className=\"modal-header\">\n          <h2>Create New List</h2>\n          <button onClick={onClose} className=\"close-button\">\n            <X size={20} />\n          </button>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <div className=\"modal-body\">\n            {error && <div className=\"modal-error\">{error}</div>}\n\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">List Title</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => {\n                  setTitle(e.target.value)\n                  // Clear error when user types\n                  if (error) validateTitle(e.target.value)\n                }}\n                placeholder=\"Enter list title\"\n                autoFocus\n                className={error ? \"input-error\" : \"\"}\n              />\n              {error && <div className=\"error-message\">{error}</div>}\n            </div>\n          </div>\n\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"button secondary\" onClick={onClose} disabled={isSubmitting}>\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"button primary\" disabled={isSubmitting || !title.trim()}>\n              {isSubmitting ? \"Creating...\" : \"Create List\"}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default CreateListModal;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}