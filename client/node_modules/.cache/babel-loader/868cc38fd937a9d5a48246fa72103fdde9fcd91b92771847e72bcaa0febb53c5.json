{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../services/api\";\n\n// Create the context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\n// Provider component\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoggedIn = async () => {\n      try {\n        // Try to access a protected endpoint to check if logged in\n        const response = await api.get(\"/api/todos/lists\");\n        if (response.status === 200) {\n          // If successful, we're logged in\n          // Since we don't have a /me endpoint, we'll just set a basic user object\n          setCurrentUser({\n            username: localStorage.getItem(\"username\") || \"User\"\n          });\n        }\n      } catch (error) {\n        console.error(\"Authentication check failed:\", error);\n        // Clear any stored username\n        localStorage.removeItem(\"username\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkLoggedIn();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      setError(\"\");\n      const response = await api.post(\"/api/auth/login\", {\n        username,\n        password\n      });\n\n      // Store username for display purposes\n      localStorage.setItem(\"username\", response.data.user.username);\n      setCurrentUser(response.data.user);\n      navigate(\"/dashboard\");\n      return true;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login failed:\", error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Login failed. Please try again.\");\n      return false;\n    }\n  };\n  const register = async (username, password) => {\n    try {\n      setError(\"\");\n      await api.post(\"/api/auth/register\", {\n        username,\n        password\n      });\n\n      // After registration, log the user in\n      return await login(username, password);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration failed:\", error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Registration failed. Please try again.\");\n      return false;\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post(\"/api/auth/logout\");\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      localStorage.removeItem(\"username\");\n      setCurrentUser(null);\n      navigate(\"/login\");\n    }\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    error,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"8xaz4WvOgaX096CS9X/79U9bmQs=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","React","createContext","useState","useEffect","useNavigate","api","jsxDEV","_jsxDEV","AuthContext","useAuth","context","useContext","Error","AuthProvider","children","currentUser","setCurrentUser","loading","setLoading","error","setError","navigate","checkLoggedIn","response","get","status","username","localStorage","getItem","console","removeItem","login","password","post","setItem","data","user","_error$response","_error$response$data","register","_error$response2","_error$response2$data","logout","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/context/AuthContext.js"],"sourcesContent":["\"use client\"\n\nimport React, { createContext, useState, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport api from \"../services/api\"\n\n// Create the context\nexport const AuthContext = createContext(null)\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\n// Provider component\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(\"\")\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const checkLoggedIn = async () => {\n      try {\n        // Try to access a protected endpoint to check if logged in\n        const response = await api.get(\"/api/todos/lists\")\n        if (response.status === 200) {\n          // If successful, we're logged in\n          // Since we don't have a /me endpoint, we'll just set a basic user object\n          setCurrentUser({ username: localStorage.getItem(\"username\") || \"User\" })\n        }\n      } catch (error) {\n        console.error(\"Authentication check failed:\", error)\n        // Clear any stored username\n        localStorage.removeItem(\"username\")\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    checkLoggedIn()\n  }, [])\n\n  const login = async (username, password) => {\n    try {\n      setError(\"\")\n      const response = await api.post(\"/api/auth/login\", { username, password })\n\n      // Store username for display purposes\n      localStorage.setItem(\"username\", response.data.user.username)\n      setCurrentUser(response.data.user)\n      navigate(\"/dashboard\")\n      return true\n    } catch (error) {\n      console.error(\"Login failed:\", error)\n      setError(error.response?.data?.error || \"Login failed. Please try again.\")\n      return false\n    }\n  }\n\n  const register = async (username, password) => {\n    try {\n      setError(\"\")\n      await api.post(\"/api/auth/register\", { username, password })\n\n      // After registration, log the user in\n      return await login(username, password)\n    } catch (error) {\n      console.error(\"Registration failed:\", error)\n      setError(error.response?.data?.error || \"Registration failed. Please try again.\")\n      return false\n    }\n  }\n\n  const logout = async () => {\n    try {\n      await api.post(\"/api/auth/logout\")\n    } catch (error) {\n      console.error(\"Logout error:\", error)\n    } finally {\n      localStorage.removeItem(\"username\")\n      setCurrentUser(null)\n      navigate(\"/login\")\n    }\n  }\n\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    error,\n    loading,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport default AuthContext\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}