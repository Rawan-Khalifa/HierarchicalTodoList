{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/TodoList.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport AddTaskForm from \"./AddTaskForm\";\nimport { getTasks } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  list,\n  onMoveTask\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showAddForm, setShowAddForm] = useState(false);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        setLoading(true);\n        const tasksData = await getTasks(list.id);\n        setTasks(tasksData);\n        setError(null);\n      } catch (err) {\n        setError(\"Failed to load tasks\");\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTasks();\n  }, [list.id]);\n  const handleStatusChange = (taskId, newStatus) => {\n    // Update tasks recursively\n    const updateTasksRecursively = tasksList => {\n      return tasksList.map(task => {\n        if (task.id === taskId) {\n          return {\n            ...task,\n            status: newStatus\n          };\n        }\n        if (task.subtasks && task.subtasks.length > 0) {\n          return {\n            ...task,\n            subtasks: updateTasksRecursively(task.subtasks)\n          };\n        }\n        return task;\n      });\n    };\n    setTasks(updateTasksRecursively(tasks));\n  };\n  const handleAddTask = newTask => {\n    // Add the new task to the list\n    if (newTask.parent_id) {\n      // If it's a subtask, we need to find the parent and add it there\n      const updateTasksWithNewSubtask = (tasksList, parentId) => {\n        return tasksList.map(task => {\n          if (task.id === parentId) {\n            return {\n              ...task,\n              subtasks: [...(task.subtasks || []), {\n                ...newTask,\n                subtasks: []\n              }]\n            };\n          }\n          if (task.subtasks && task.subtasks.length > 0) {\n            return {\n              ...task,\n              subtasks: updateTasksWithNewSubtask(task.subtasks, parentId)\n            };\n          }\n          return task;\n        });\n      };\n      setTasks(updateTasksWithNewSubtask(tasks, newTask.parent_id));\n    } else {\n      // If it's a top-level task, just add it to the array\n      setTasks([...tasks, {\n        ...newTask,\n        subtasks: []\n      }]);\n    }\n    setShowAddForm(false);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading tasks...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error-message\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list-header\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        marginBottom: \"16px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: list.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAddForm(!showAddForm),\n        style: {\n          backgroundColor: \"#4caf50\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          padding: \"8px 16px\",\n          cursor: \"pointer\"\n        },\n        children: showAddForm ? \"Cancel\" : \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), showAddForm && /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      listId: list.id,\n      onTaskAdded: handleAddTask,\n      parentId: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks-container\",\n      children: tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: \"No tasks yet. Add your first task!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n        task: task,\n        onStatusChange: handleStatusChange,\n        onMoveTask: onMoveTask,\n        listId: list.id,\n        onTaskAdded: handleAddTask\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"xfHmVre0i82CeqxB2Wkzl2pR//Q=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useState","useEffect","TodoItem","AddTaskForm","getTasks","jsxDEV","_jsxDEV","TodoList","list","onMoveTask","tasks","setTasks","loading","setLoading","error","setError","showAddForm","setShowAddForm","fetchTasks","tasksData","id","err","console","handleStatusChange","taskId","newStatus","updateTasksRecursively","tasksList","map","task","status","subtasks","length","handleAddTask","newTask","parent_id","updateTasksWithNewSubtask","parentId","children","fileName","lineNumber","columnNumber","className","style","display","justifyContent","alignItems","marginBottom","title","onClick","backgroundColor","color","border","borderRadius","padding","cursor","listId","onTaskAdded","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/rwankhalifa/Documents/HierarchicalTodoList/client/src/components/TodoList.js"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport TodoItem from \"./TodoItem\"\nimport AddTaskForm from \"./AddTaskForm\"\nimport { getTasks } from \"../services/api\"\n\nconst TodoList = ({ list, onMoveTask }) => {\n  const [tasks, setTasks] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(null)\n  const [showAddForm, setShowAddForm] = useState(false)\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        setLoading(true)\n        const tasksData = await getTasks(list.id)\n        setTasks(tasksData)\n        setError(null)\n      } catch (err) {\n        setError(\"Failed to load tasks\")\n        console.error(err)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchTasks()\n  }, [list.id])\n\n  const handleStatusChange = (taskId, newStatus) => {\n    // Update tasks recursively\n    const updateTasksRecursively = (tasksList) => {\n      return tasksList.map((task) => {\n        if (task.id === taskId) {\n          return { ...task, status: newStatus }\n        }\n        if (task.subtasks && task.subtasks.length > 0) {\n          return {\n            ...task,\n            subtasks: updateTasksRecursively(task.subtasks),\n          }\n        }\n        return task\n      })\n    }\n\n    setTasks(updateTasksRecursively(tasks))\n  }\n\n  const handleAddTask = (newTask) => {\n    // Add the new task to the list\n    if (newTask.parent_id) {\n      // If it's a subtask, we need to find the parent and add it there\n      const updateTasksWithNewSubtask = (tasksList, parentId) => {\n        return tasksList.map((task) => {\n          if (task.id === parentId) {\n            return {\n              ...task,\n              subtasks: [...(task.subtasks || []), { ...newTask, subtasks: [] }],\n            }\n          }\n          if (task.subtasks && task.subtasks.length > 0) {\n            return {\n              ...task,\n              subtasks: updateTasksWithNewSubtask(task.subtasks, parentId),\n            }\n          }\n          return task\n        })\n      }\n\n      setTasks(updateTasksWithNewSubtask(tasks, newTask.parent_id))\n    } else {\n      // If it's a top-level task, just add it to the array\n      setTasks([...tasks, { ...newTask, subtasks: [] }])\n    }\n\n    setShowAddForm(false)\n  }\n\n  if (loading) return <div>Loading tasks...</div>\n  if (error) return <div className=\"error-message\">{error}</div>\n\n  return (\n    <div className=\"todo-list\">\n      <div\n        className=\"list-header\"\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          marginBottom: \"16px\",\n        }}\n      >\n        <h2>{list.title}</h2>\n        <button\n          onClick={() => setShowAddForm(!showAddForm)}\n          style={{\n            backgroundColor: \"#4caf50\",\n            color: \"white\",\n            border: \"none\",\n            borderRadius: \"4px\",\n            padding: \"8px 16px\",\n            cursor: \"pointer\",\n          }}\n        >\n          {showAddForm ? \"Cancel\" : \"Add Task\"}\n        </button>\n      </div>\n\n      {showAddForm && <AddTaskForm listId={list.id} onTaskAdded={handleAddTask} parentId={null} />}\n\n      <div className=\"tasks-container\">\n        {tasks.length === 0 ? (\n          <div className=\"empty-state\">No tasks yet. Add your first task!</div>\n        ) : (\n          tasks.map((task) => (\n            <TodoItem\n              key={task.id}\n              task={task}\n              onStatusChange={handleStatusChange}\n              onMoveTask={onMoveTask}\n              listId={list.id}\n              onTaskAdded={handleAddTask}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default TodoList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}